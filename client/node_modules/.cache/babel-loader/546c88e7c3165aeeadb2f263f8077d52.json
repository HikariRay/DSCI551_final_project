{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Rain/Downloads/DSCI551_final_project-master 4/client/src/components/PropSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../firebase';\nimport PropCrime from './PropCrime';\nimport Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from '@material-ui/core/Input';\nimport Box from \"@material-ui/core/Box\";\nexport default function PropSearch() {\n  _s();\n\n  const [propList, setPropList] = useState();\n  const [name, setName] = useState('');\n\n  const handleOnChange = e => {\n    setName(e.target.value);\n  };\n\n  console.log(name); // useEffect(()=>{\n  //   const propRef = firebase.database().ref('propertyinfo');\n  //   propRef.on('value',(snapshot)=>{\n  //     const props=snapshot.val();\n  //     const propList=[]\n  //     for(let id in props){\n  //       if (props[id].name==name){\n  //         console.log(props[id]);\n  //         propList.push(props[id]);\n  //       }\n  //     }\n  //     console.log(propList);\n  //     setPropList(propList);\n  //   })\n  // },[]);\n\n  const searchProp = () => {\n    const propRef = firebase.database().ref('propertyinfo');\n    propRef.on('value', snapshot => {\n      const props = snapshot.val();\n      const propList = [];\n\n      for (let id in props) {\n        if (props[id].name.toLowerCase().includes(name.toLowerCase())) {\n          console.log(props[id]);\n          propList.push(props[id]);\n        }\n      } //console.log(propList);\n\n\n      setPropList(propList);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        color: \"white\",\n        fontWeight: \"fontWeightBold\",\n        m: 1,\n        children: \"Search property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Search Here\",\n      onChange: handleOnChange,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: searchProp,\n      children: \" Search Property Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), propList ? propList.map((prop, index) => /*#__PURE__*/_jsxDEV(PropCrime, {\n      prop: prop\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 48\n    }, this)) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PropSearch, \"KiLmexNY4fKmoQtrqh7xMJkSX5g=\");\n\n_c = PropSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropSearch\");","map":{"version":3,"sources":["/Users/Rain/Downloads/DSCI551_final_project-master 4/client/src/components/PropSearch.js"],"names":["React","useEffect","useState","firebase","PropCrime","Button","Typography","Input","Box","PropSearch","propList","setPropList","name","setName","handleOnChange","e","target","value","console","log","searchProp","propRef","database","ref","on","snapshot","props","val","id","toLowerCase","includes","push","map","prop","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,EAArC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,cAAc,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFH;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EARgC,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAGlB,QAAQ,CAACmB,QAAT,GAAoBC,GAApB,CAAwB,cAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAoBC,QAAD,IAAY;AAC7B,YAAMC,KAAK,GAACD,QAAQ,CAACE,GAAT,EAAZ;AACA,YAAMjB,QAAQ,GAAC,EAAf;;AACA,WAAI,IAAIkB,EAAR,IAAcF,KAAd,EAAoB;AAClB,YAAIA,KAAK,CAACE,EAAD,CAAL,CAAUhB,IAAV,CAAeiB,WAAf,GAA6BC,QAA7B,CAAsClB,IAAI,CAACiB,WAAL,EAAtC,CAAJ,EAA8D;AAC5DX,UAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACE,EAAD,CAAjB;AACAlB,UAAAA,QAAQ,CAACqB,IAAT,CAAcL,KAAK,CAACE,EAAD,CAAnB;AACD;AACF,OAR4B,CAS7B;;;AACAjB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAXD;AAYD,GAdD;;AAiBA,sBACA;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA,6BAAsC,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,OAAX;AAAmB,QAAA,UAAU,EAAC,gBAA9B;AAA+C,QAAA,CAAC,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,aAA/B;AAA6C,MAAA,QAAQ,EAAEI,cAAvD;AAAuE,MAAA,KAAK,EAAEF;AAA9E;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEQ,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKV,QAAQ,GAAGA,QAAQ,CAACsB,GAAT,CAAa,CAACC,IAAD,EAAMC,KAAN,kBAAc,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED;AAAjB,OAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA,YAA3B,CAAH,GAAqE,EANlF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUH;;GArDuBzB,U;;KAAAA,U","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport firebase from '../firebase';\nimport PropCrime from './PropCrime';\nimport Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from '@material-ui/core/Input';\nimport Box from \"@material-ui/core/Box\";\n\nexport default function PropSearch(){\n    const [propList,setPropList]=useState();\n    const [name, setName] = useState('');\n\n    const handleOnChange = (e) => {\n        setName(e.target.value);\n      };\n    \n    console.log(name);\n\n    // useEffect(()=>{\n    //   const propRef = firebase.database().ref('propertyinfo');\n    //   propRef.on('value',(snapshot)=>{\n    //     const props=snapshot.val();\n    //     const propList=[]\n    //     for(let id in props){\n    //       if (props[id].name==name){\n    //         console.log(props[id]);\n    //         propList.push(props[id]);\n    //       }\n    //     }\n    //     console.log(propList);\n    //     setPropList(propList);\n    //   })\n    // },[]);\n\n    const searchProp = () => {\n      const propRef = firebase.database().ref('propertyinfo');\n      propRef.on('value',(snapshot)=>{\n        const props=snapshot.val();\n        const propList=[]\n        for(let id in props){\n          if (props[id].name.toLowerCase().includes(name.toLowerCase())){\n            console.log(props[id]);\n            propList.push(props[id]);\n          }\n        }\n        //console.log(propList);\n        setPropList(propList);\n      });\n    };\n\n\n    return (\n    <div>\n        <Typography variant=\"h4\" gutterBottom><Box color=\"white\" fontWeight=\"fontWeightBold\" m={1}>\n         Search property\n      </Box></Typography>\n        <Input type=\"text\" placeholder=\"Search Here\" onChange={handleOnChange} value={name} />\n        <Button variant=\"contained\" color=\"primary\" onClick={searchProp}> Search Property Name</Button>\n        {propList ? propList.map((prop,index)=><PropCrime prop={prop} key={index}/>) :''}\n    </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}